<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boras.CRM.mapper.ContractMapper">
  	
  	<!-- 계출 등록-->
  	<insert id="insertContract" parameterType="contractVO">
		INSERT INTO contract(
			contract_ledger_seq,
			contract_user_id,
			contract_nomal_total_fee_percent,
			contract_nomal_total_fee_sum,
			contract_nomal_ag_fee_percent,
			contract_nomal_ag_fee_sum,
			contract_nomal_dp_fee_percent,
			contract_nomal_dp_fee_sum,
			contract_add_total_fee_sum,
			contract_add_ag_fee_sum,
			contract_add_dp_fee_sum,
			contract_total_sliding_percent,
			contract_total_sliding_sum,
			contract_ag_sliding_percent,
			contract_ag_sliding_sum,
			contract_dp_sliding_percent,
			contract_dp_sliding_sum,
			contract_ag_fee_surtax_support_yn,
			contract_sliding_surtax_support_yn,
			contract_add_fee_surtax_support_yn,
			contract_create_year,
			contract_create_month,
			contract_create_user_id,
			contract_create_date
		)
		VALUES(
			#{contractLedgerSeq},
			#{contractUserId},
			#{contractNomalTotalFeePercent},
			#{contractNomalTotalFeeSum},
			#{contractNomalAgFeePercent},
			#{contractNomalAgFeeSum},
			#{contractNomalDpFeePercent},
			#{contractNomalDpFeeSum},
			#{contractAddTotalFeeSum},
			#{contractAddAgFeeSum},
			#{contractAddDpFeeSum},
			#{contractTotalSlidingPercent},
			#{contractTotalSlidingSum},
			#{contractAgSlidingPercent},
			#{contractAgSlidingSum},
			#{contractDpSlidingPercent},
			#{contractDpSlidingSum},
			#{contractAgFeeSurtaxSupportYn},
			#{contractSlidingSurtaxSupportYn},
			#{contractAddFeeSurtaxSupportYn},
			#{contractCreateYear},
			#{contractCreateMonth},
			#{contractCreateUserId},
			now()
			
		) 
  	</insert>
  	
  	<!-- 등록 년 조회 -->
	<select id="selectContractYear" resultType="map">
		select contract_create_year
		from contract
		group by contract_create_year
  	</select>
  	
  	<!-- 년월에 따른 계출 목록 조회 -->
  	<select id="selectContractList" parameterType="contractVO" resultType="contractVO">
  		SELECT *
  		,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_company_cd) as ledgerFinancialCompanyCdName
		,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_product_cd) as ledgerFinancialProductCdName
		,(SELECT user_name FROM users u WHERE u.user_id = c.contract_user_id) as user_name
  		 FROM contract c
  		LEFT JOIN ledger l
  		ON c.contract_ledger_seq=l.ledger_seq
  		WHERE contract_create_year=#{contractCreateYear}
  			AND contract_create_month=#{contractCreateMonth}
  			<if test="ledgerFinancialCompanyCd != 0">
				AND l.ledger_financial_company_cd = #{ledgerFinancialCompanyCd}
			</if>
			<if test="ledgerFinancialProductCd != 0">
				AND l.ledger_financial_product_cd = #{ledgerFinancialProductCd}
			</if>
			<if test="userId != null and userId != ''">
				AND contract_user_id = #{userId}
			</if>
			<if test="searchText != null and searchText != ''">
				AND (l.ledger_car_name like CONCAT('%',#{searchText},'%')
					OR l.ledger_car_number like CONCAT('%',#{searchText},'%')
					OR l.ledger_car_price like CONCAT('%',#{searchText},'%')
					OR l.ledger_acquisition_cost like CONCAT('%',#{searchText},'%')
					OR l.ledger_delivery_date like CONCAT('%',#{searchText},'%')
					OR l.ledger_other like CONCAT('%',#{searchText},'%')
					OR l.ledger_customer_name like CONCAT('%',#{searchText},'%')
					)
			</if>
  		ORDER BY contract_create_date desc
		<!-- LIMIT #{pagePerRows} offset #{page} -->
  	</select>
  	
  	<!-- 년월에 따른 계출 목록 조회 -->
  	<select id="selectContractListCount" parameterType="contractVO" resultType="int">
  		SELECT count(*)
  		 FROM contract c
  		LEFT JOIN ledger l
  		ON c.contract_ledger_seq=l.ledger_seq
  		WHERE contract_create_year=#{contractCreateYear}
  			AND contract_create_month=#{contractCreateMonth}
  			<if test="ledgerFinancialCompanyCd != 0">
				AND l.ledger_financial_company_cd = #{ledgerFinancialCompanyCd}
			</if>
			<if test="ledgerFinancialProductCd != 0">
				AND l.ledger_financial_product_cd = #{ledgerFinancialProductCd}
			</if>
			<if test="userId != null and userId != ''">
				AND contract_user_id = #{userId}
			</if>
			<if test="searchText != null and searchText != ''">
				AND (l.ledger_car_name like CONCAT('%',#{searchText},'%')
					OR l.ledger_car_number like CONCAT('%',#{searchText},'%')
					OR l.ledger_car_price like CONCAT('%',#{searchText},'%')
					OR l.ledger_acquisition_cost like CONCAT('%',#{searchText},'%')
					OR l.ledger_delivery_date like CONCAT('%',#{searchText},'%')
					OR l.ledger_other like CONCAT('%',#{searchText},'%')
					OR l.ledger_customer_name like CONCAT('%',#{searchText},'%')
					)
			</if>
  	</select>
  	
  	<!-- 계출 수정 -->
	<update id="updateContract" parameterType="contractVO">
		UPDATE contract
		SET contract_nomal_total_fee_percent = #{contractNomalTotalFeePercent},
			contract_nomal_total_fee_sum = #{contractNomalTotalFeeSum},
			contract_nomal_ag_fee_percent = #{contractNomalAgFeePercent},
			contract_nomal_ag_fee_sum = #{contractNomalAgFeeSum},
			contract_nomal_dp_fee_percent = #{contractNomalDpFeePercent},
			contract_nomal_dp_fee_sum = #{contractNomalDpFeeSum},
			contract_add_total_fee_sum = #{contractAddTotalFeeSum},
			contract_add_ag_fee_sum = #{contractAddAgFeeSum},
			contract_add_dp_fee_sum = #{contractAddDpFeeSum},
			contract_total_sliding_percent = #{contractTotalSlidingPercent},
			contract_total_sliding_sum = #{contractTotalSlidingSum},
			contract_ag_sliding_percent = #{contractAgSlidingPercent},
			contract_ag_sliding_sum = #{contractAgSlidingSum},
			contract_dp_sliding_percent = #{contractDpSlidingPercent},
			contract_dp_sliding_sum = #{contractDpSlidingSum},
			contract_ag_fee_surtax_support_yn = #{contractAgFeeSurtaxSupportYn},
			contract_sliding_surtax_support_yn = #{contractSlidingSurtaxSupportYn},
			contract_add_fee_surtax_support_yn = #{contractAddFeeSurtaxSupportYn},
			contract_update_user_id=#{contractUpdateUserId},
			contract_update_date = now()
		WHERE contract_seq = #{contractSeq} 
  	</update>
  	
  	<!-- 계출 상세 -->
  	<select id="selectContractInfo" parameterType="contractVO" resultType="contractVO">
  		SELECT *
  		,(SELECT user_name FROM users u WHERE u.user_id = c.contract_user_id) as user_name
  		 FROM contract c
  		LEFT JOIN ledger l
  		ON c.contract_ledger_seq=l.ledger_seq
  		WHERE c.contract_seq = #{contractSeq}
  	</select>
  	
  	<!-- 승인완료되어 ag사 매칭 -->
	<update id="updateContractByApproval" parameterType="contractVO">
		UPDATE contract
		SET	contract_user_id = #{contractUserId},
			contract_update_user_id=#{contractUpdateUserId},
			contract_update_date = now()
		WHERE contract_seq = #{contractSeq} 
  	</update>
  	
  	<!-- 계출 seq로 원장 seq가져오기 -->
  	<select id="selectContractSeqByLedgerSeq" parameterType="contractVO" resultType="contractVO">
  		SELECT c.* FROM contract c
  		LEFT JOIN ledger l
  		ON c.contract_ledger_seq=l.ledger_seq
  		WHERE c.contract_ledger_seq = #{contractLedgerSeq}
  	</select>
  	
  	<!-- 정산할 계출목록 조회 -->
  	<select id="selectContractListForCalculate" parameterType="contractVO" resultType="contractVO">
  		SELECT * FROM contract 
  		WHERE contract_create_year = #{contractCreateYear} 
  			AND contract_create_month = #{contractCreateMonth}
  			AND contract_user_id = #{contractUserId}
  	</select>
  	
  	<!-- 정산용 계출 합 -->
  	<select id="ttftrtrtrtrtrt" parameterType="contractVO" resultType="contractVO">
  		SELECT sum(contract_nomal_ag_fee_sum)as calculate_ag_fee_sum
  		,sum(calculate_sliding_sum)as calculate_sliding_sum
  		sum(calculate_add_fee_sum)as calculate_add_fee_sum
  		sum(contract_nomal_ag_fee_sum)as calculate_supply_sum
  		sum(contract_nomal_ag_fee_sum)as calculate_surtax_sum
  		sum(contract_nomal_ag_fee_sum)as calculate_personal_ag_sum
  		sum(contract_nomal_ag_fee_sum)as calculate_business_sum
  		 FROM contract 
  		WHERE contract_create_year = #{contractCreateYear} 
  			AND contract_create_month = #{contractCreateMonth}
  			AND contract_user_id = #{contractUserId}
  	</select>
  
</mapper>