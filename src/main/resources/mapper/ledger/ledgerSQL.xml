<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boras.CRM.mapper.LedgerMapper">
  	
  	<!-- 원장 등록 -->
  	<insert id="insertLedger" parameterType="ledgerVO" useGeneratedKeys="true" keyProperty="ledgerSeq">
		INSERT INTO ledger(
			ledger_financial_company_cd
			, ledger_financial_branch_cd
			, ledger_financial_product_cd
			<if test="ledgerOther != null and ledgerOther != ''">
			, ledger_other
			</if>
			<if test="ledgerTypeCd != null and ledgerTypeCd != ''">
			, ledger_type_cd
			</if>
			<if test="ledgerDealerBrandCd != null and ledgerDealerBrandCd != ''">
			, ledger_dealer_brand_cd
			</if>
			<if test="ledgerDealerCompanyCd != null and ledgerDealerCompanyCd != ''">
			, ledger_dealer_company_cd
			</if>
			<if test="ledgerDeliveryDate != null and ledgerDeliveryDate != ''">
			, ledger_delivery_date
			</if>
			<if test="ledgerCustomerName != null and ledgerCustomerName != ''">
			, ledger_customer_name
			</if>
			<if test="ledgerCarName != null and ledgerCarName != ''">
			, ledger_car_name
			</if>
			<if test="ledgerCarNumber != null and ledgerCarNumber != ''">
			, ledger_car_number
			</if>
			<if test="ledgerCarPrice != null and ledgerCarPrice != ''">
			, ledger_car_price
			</if>
			<if test="ledgerAcquisitionCost != null and ledgerAcquisitionCost != ''">
			, ledger_acquisition_cost
			</if>
			<if test="ledgerTotalFeePercent != null and ledgerTotalFeePercent != ''">
			, ledger_total_fee_percent
			</if>
			<if test="ledgerTotalFeeSum != null and ledgerTotalFeeSum != ''">
			, ledger_total_fee_sum
			</if>
			<if test="ledgerTotalFeeSupplyPrice != null and ledgerTotalFeeSupplyPrice != ''">
			, ledger_total_fee_supply_price
			</if>
			<if test="ledgerTotalFeeSurtax != null and ledgerTotalFeeSurtax != ''">
			, ledger_total_fee_surtax
			</if>
			<if test="ledgerSlidingPercent != null and ledgerSlidingPercent != ''">
			, ledger_sliding_percent
			</if>
			<if test="ledgerSlidingSum != null and ledgerSlidingSum != ''">
			, ledger_sliding_sum
			</if>
			<if test="ledgerSlidingSupplyPrice != null and ledgerSlidingSupplyPrice != ''">
			, ledger_sliding_supply_price
			</if>
			<if test="ledgerSlidingSurtax != null and ledgerSlidingSurtax != ''">
			, ledger_sliding_surtax
			</if>
			<if test="ledgerAddPromotion != null and ledgerAddPromotion != ''">
			, ledger_add_promotion
			</if>
			<if test="ledgerPromotionMemo != null and ledgerPromotionMemo != ''">
			, ledger_promotion_memo
			</if>
			, ledger_create_year
			, ledger_create_month
			, ledger_create_date
			, ledger_create_user_id
		) VALUES (
			#{ledgerFinancialCompanyCd}
			, #{ledgerFinancialBranchCd}
			, #{ledgerFinancialProductCd}
			<if test="ledgerOther != null and ledgerOther != ''">
			, #{ledgerOther}
			</if>
			<if test="ledgerTypeCd != null and ledgerTypeCd != ''">
			, #{ledgerTypeCd}
			</if>
			<if test="ledgerDealerBrandCd != null and ledgerDealerBrandCd != ''">
			, #{ledgerDealerBrandCd}
			</if>
			<if test="ledgerDealerCompanyCd != null and ledgerDealerCompanyCd != ''">
			, #{ledgerDealerCompanyCd}
			</if>
			<if test="ledgerDeliveryDate != null and ledgerDeliveryDate != ''">
			, TO_TIMESTAMP(#{ledgerDeliveryDate}, 'YYYYMMDD')
			</if>
			<if test="ledgerCustomerName != null and ledgerCustomerName != ''">
			, #{ledgerCustomerName}
			</if>
			<if test="ledgerCarName != null and ledgerCarName != ''">
			, #{ledgerCarName}
			</if>
			<if test="ledgerCarNumber != null and ledgerCarNumber != ''">
			, #{ledgerCarNumber}
			</if>
			<if test="ledgerCarPrice != null and ledgerCarPrice != ''">
			, #{ledgerCarPrice}
			</if>
			<if test="ledgerAcquisitionCost != null and ledgerAcquisitionCost != ''">
			, #{ledgerAcquisitionCost}
			</if>
			<if test="ledgerTotalFeePercent != null and ledgerTotalFeePercent != ''">
			, #{ledgerTotalFeePercent}
			</if>
			<if test="ledgerTotalFeeSum != null and ledgerTotalFeeSum != ''">
			, #{ledgerTotalFeeSum}
			</if>
			<if test="ledgerTotalFeeSupplyPrice != null and ledgerTotalFeeSupplyPrice != ''">
			, #{ledgerTotalFeeSupplyPrice}
			</if>
			<if test="ledgerTotalFeeSurtax != null and ledgerTotalFeeSurtax != ''">
			, #{ledgerTotalFeeSurtax}
			</if>
			<if test="ledgerSlidingPercent != null and ledgerSlidingPercent != ''">
			, #{ledgerSlidingPercent}
			</if>
			<if test="ledgerSlidingSum != null and ledgerSlidingSum != ''">
			, #{ledgerSlidingSum}
			</if>
			<if test="ledgerSlidingSupplyPrice != null and ledgerSlidingSupplyPrice != ''">
			, #{ledgerSlidingSupplyPrice}
			</if>
			<if test="ledgerSlidingSurtax != null and ledgerSlidingSurtax != ''">
			, #{ledgerSlidingSurtax}
			</if>
			<if test="ledgerAddPromotion != null and ledgerAddPromotion != ''">
			, #{ledgerAddPromotion}
			</if>
			<if test="ledgerPromotionMemo != null and ledgerPromotionMemo != ''">
			, #{ledgerPromotionMemo}
			</if>
			, extract('YEAR' from now()::timestamp)
			, extract('MONTH' from now()::timestamp)
			, now()
			, #{ledgerCreateUserId}
		)
  	</insert>
  	
  	<!-- 원장 수정 -->
	<update id="updateLedger" parameterType="ledgerVO">
		UPDATE ledger
		SET ledger_update_date = now()
			, ledger_update_user_id = #{ledgerUpdateUserId}
			<if test="ledgerOther != null and ledgerOther != ''">
			, ledger_other = #{ledgerOther}
			</if>
			<if test="ledgerTypeCd != null and ledgerTypeCd != ''">
			, ledger_type_cd = #{ledgerTypeCd}
			</if>
			<if test="ledgerFinancialCompanyCd != null and ledgerFinancialCompanyCd != ''">
			, ledger_financial_company_cd = #{ledgerFinancialCompanyCd}
			</if>
			<if test="ledgerFinancialBranchCd != null and ledgerFinancialBranchCd != ''">
			, ledger_financial_branch_cd = #{ledgerFinancialBranchCd}
			</if>
			<if test="ledgerFinancialProductCd != null and ledgerFinancialProductCd != ''">
			, ledger_financial_product_cd = #{ledgerFinancialProductCd}
			</if>
			<if test="ledgerDealerBrandCd != null and ledgerDealerBrandCd != ''">
			, ledger_dealer_brand_cd = #{ledgerDealerBrandCd}
			</if>
			<if test="ledgerDealerCompanyCd != null and ledgerDealerCompanyCd != ''">
			, ledger_dealer_company_cd = #{ledgerDealerCompanyCd}
			</if>
			<if test="ledgerDeliveryDate != null and ledgerDeliveryDate != ''">
			, ledger_delivery_date = #{ledgerDeliveryDate}
			</if>
			<if test="ledgerCustomerName != null and ledgerCustomerName != ''">
			, ledger_customer_name = #{ledgerCustomerName}
			</if>
			<if test="ledgerCarName != null and ledgerCarName != ''">
			, ledger_car_name = #{ledgerCarName}
			</if>
			<if test="ledgerCarNumber != null and ledgerCarNumber != ''">
			, ledger_car_number = #{ledgerCarNumber}
			</if>
			<if test="ledgerCarPrice != null and ledgerCarPrice != ''">
			, ledger_car_price = #{ledgerCarPrice}
			</if>
			<if test="ledgerAcquisitionCost != null and ledgerAcquisitionCost != ''">
			, ledger_acquisition_cost = #{ledgerAcquisitionCost}
			</if>
			<if test="ledgerTotalFeePercent != null and ledgerTotalFeePercent != ''">
			, ledger_total_fee_percent = #{ledgerTotalFeePercent}
			</if>
			<if test="ledgerTotalFeeSum != null and ledgerTotalFeeSum != ''">
			, ledger_total_fee_sum = #{ledgerTotalFeeSum}
			</if>
			<if test="ledgerTotalFeeSupplyPrice != null and ledgerTotalFeeSupplyPrice != ''">
			, ledger_total_fee_supply_price = #{ledgerTotalFeeSupplyPrice}
			</if>
			<if test="ledgerTotalFeeSurtax != null and ledgerTotalFeeSurtax != ''">
			, ledger_total_fee_surtax = #{ledgerTotalFeeSurtax}
			</if>
			<if test="ledgerSlidingPercent != null and ledgerSlidingPercent != ''">
			, ledger_sliding_percent = #{ledgerSlidingPercent}
			</if>
			<if test="ledgerSlidingSum != null and ledgerSlidingSum != ''">
			, ledger_sliding_sum = #{ledgerSlidingSum}
			</if>
			<if test="ledgerSlidingSupplyPrice != null and ledgerSlidingSupplyPrice != ''">
			, ledger_sliding_supply_price = #{ledgerSlidingSupplyPrice}
			</if>
			<if test="ledgerSlidingSurtax != null and ledgerSlidingSurtax != ''">
			, ledger_sliding_surtax = #{ledgerSlidingSurtax}
			</if>
			<if test="ledgerAddPromotion != null and ledgerAddPromotion != ''">
			, ledger_add_promotion = #{ledgerAddPromotion}
			</if>
			<if test="ledgerPromotionMemo != null and ledgerPromotionMemo != ''">
			, ledger_promotion_memo = #{ledgerPromotionMemo}
			</if>
		WHERE ledger_seq = #{ledgerSeq}
  	</update>
  	
  	<!-- 원장 상세 조회 -->
	<select id="selectLedgerDetail" resultType="ledgerVO" parameterType="ledgerVO">
		SELECT l.*
		,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_company_cd) as ledgerFinancialCompanyCdName
		,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_branch_cd) as ledgerFinancialBranchCdName
		,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_product_cd) as ledgerFinancialProductCdName
		,(SELECT code_name FROM code WHERE code_id = l.ledger_dealer_brand_cd) as ledgerDealerBrandCdName
		,(SELECT code_name FROM code WHERE code_id = l.ledger_dealer_company_cd) as ledgerDealerCompanyCdName
		FROM ledger l
		WHERE ledger_seq = #{ledgerSeq}
  	</select>
  	
  	<!-- 원장 목록 -->
	<select id="selectLedgerList" resultType="ledgerVO" parameterType="ledgerVO">
		SELECT *
			,(SELECT user_name from users where user_id = data.agUserId) as agUserName
		FROM
			(SELECT DISTINCT l.*
				,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_company_cd) as ledgerFinancialCompanyCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_branch_cd) as ledgerFinancialBranchCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_product_cd) as ledgerFinancialProductCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_dealer_brand_cd) as ledgerDealerBrandCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_dealer_company_cd) as ledgerDealerCompanyCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_type_cd) as ledgerTypeCdName
				,(SELECT approval_user_id from approval where approval_ledger_seq = ledger_seq limit 1) as agUserId
				,(SELECT approval_seq from approval where approval_ledger_seq = ledger_seq limit 1) as approval_seq
				,(SELECT count(*) FROM approval WHERE approval_ledger_seq = ledger_seq
				<if test="stateType != null and stateType != ''">
					<choose>
						<when test="stateType.equals('request')">
							AND a.approval_state = '요청'
							AND a.approval_yn = 'N'
						</when>
						<when test="stateType.equals('complete')">
							AND a.approval_state = '승인'
						</when>
						<when test="stateType.equals('left')">
							AND a.approval_state is null
						</when>
					</choose>
				</if>
				) as cnt
			FROM ledger l
			left JOIN approval a
			ON l.ledger_seq = a.approval_ledger_seq
			WHERE 1=1
			<if test="sLedgerTypeCd != null and sLedgerTypeCd.size != 0">
				AND ledger_type_cd in
				<foreach item="item" index="index" collection="sLedgerTypeCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialCompanyCd != null and sLedgerFinancialCompanyCd.size != 0">
				AND ledger_financial_company_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialCompanyCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialBranchCd != null and sLedgerFinancialBranchCd.size != 0">
				AND ledger_financial_branch_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialBranchCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialProductCd != null and sLedgerFinancialProductCd.size != 0">
				AND ledger_financial_product_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialProductCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="stateType != null and stateType != ''">
				<choose>
					<when test="stateType.equals('request')">
						AND a.approval_state = '요청'
						AND a.approval_yn = 'N'
					</when>
					<when test="stateType.equals('complete')">
						AND a.approval_state = '승인'
					</when>
					<when test="stateType.equals('left')">
						AND a.approval_state is null
					</when>
				</choose>
			</if>
			<if test="searchText != null and searchText != ''">
				AND (ledger_car_name like CONCAT('%',#{searchText},'%')
					OR ledger_car_number like CONCAT('%',#{searchText},'%')
					OR ledger_other like CONCAT('%',#{searchText},'%')
					OR ledger_customer_name like CONCAT('%',#{searchText},'%')
					)
			</if>
			<if test="ledgerCreateYear != null">
				AND ledger_create_year = #{ledgerCreateYear}
			</if>
			<if test="ledgerCreateMonth != null">
				AND ledger_create_month = #{ledgerCreateMonth}
			</if>
			) data
		WHERE 1=1
		<if test="multiRequestYn != null and multiRequestYn != ''">
			<choose>
				<when test='multiRequestYn == "Y"'>
					AND cnt = 1
				</when>
				<when test='multiRequestYn == "N"'>
					AND cnt > 1
				</when>
			</choose>
		</if>
		ORDER BY data.ledger_create_date desc
		LIMIT #{pagePerRows} offset #{page}
  	</select>
  	
  	<!-- 원장 목록 count -->
	<select id="selectLedgerListCount" resultType="int"  parameterType="ledgerVO">
		SELECT count(*)
		FROM (
			SELECT DISTINCT l.*
				,(SELECT count(*) FROM approval WHERE approval_ledger_seq = ledger_seq 
					<if test="stateType != null and stateType != ''">
						<choose>
							<when test="stateType.equals('request')">
								AND a.approval_state = '요청'
								AND a.approval_yn = 'N'
							</when>
							<when test="stateType.equals('complete')">
								AND a.approval_state = '승인'
							</when>
							<when test="stateType.equals('left')">
								AND a.approval_state is null
							</when>
						</choose>
					</if>
					) as cnt
			FROM ledger l
			left JOIN approval a
			ON l.ledger_seq = a.approval_ledger_seq
			WHERE 1=1
			<if test="sLedgerTypeCd != null and sLedgerTypeCd.size != 0">
				AND ledger_type_cd in
				<foreach item="item" index="index" collection="sLedgerTypeCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialCompanyCd != null and sLedgerFinancialCompanyCd.size != 0">
				AND ledger_financial_company_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialCompanyCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialBranchCd != null and sLedgerFinancialBranchCd.size != 0">
				AND ledger_financial_branch_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialBranchCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialProductCd != null and sLedgerFinancialProductCd.size != 0">
				AND ledger_financial_product_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialProductCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="stateType != null and stateType != ''">
				<choose>
					<when test="stateType.equals('request')">
						AND a.approval_state = '요청'
						AND a.approval_yn = 'N'
					</when>
					<when test="stateType.equals('complete')">
						AND a.approval_state = '승인'
					</when>
					<when test="stateType.equals('left')">
						AND a.approval_state is null
					</when>
				</choose>
			</if>
			<if test="searchText != null and searchText != ''">
				AND (ledger_car_name like CONCAT('%',#{searchText},'%')
					OR ledger_car_number like CONCAT('%',#{searchText},'%')
					OR ledger_other like CONCAT('%',#{searchText},'%')
					OR ledger_customer_name like CONCAT('%',#{searchText},'%')
					)
			</if>
			<if test="ledgerCreateYear != null">
				AND ledger_create_year = #{ledgerCreateYear}
			</if>
			<if test="ledgerCreateMonth != null">
				AND ledger_create_month = #{ledgerCreateMonth}
			</if>
		) as data
		WHERE 1=1
		<if test="multiRequestYn != null and multiRequestYn != ''">
			<choose>
				<when test='multiRequestYn == "Y"'>
					AND cnt = 1
				</when>
				<when test='multiRequestYn == "N"'>
					AND cnt > 1
				</when>
			</choose>
		</if>
  	</select>
  	
  	<!-- 원장 목록 (AG용) -->
	<select id="selectLedgerListForAg" resultType="ledgerVO" parameterType="ledgerVO">
		SELECT *
		FROM
			(SELECT DISTINCT l.*
				,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_company_cd) as ledgerFinancialCompanyCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_branch_cd) as ledgerFinancialBranchCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_product_cd) as ledgerFinancialProductCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_dealer_brand_cd) as ledgerDealerBrandCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_dealer_company_cd) as ledgerDealerCompanyCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_type_cd) as ledgerTypeCdName
				,(SELECT count(*) FROM approval WHERE approval_ledger_seq = ledger_seq) as cnt
				,(SELECT approval_state FROM approval WHERE approval_ledger_seq = l.ledger_seq AND approval_user_id = #{approvalUserId}) as approval_state
			FROM ledger l
			left JOIN approval a
			ON l.ledger_seq = a.approval_ledger_seq
			WHERE 1=1
			AND ledger_create_year = extract(year from now())
			AND ledger_create_month = extract(month from now())
			<if test="sLedgerTypeCd != null and sLedgerTypeCd.size != 0">
				AND ledger_type_cd in
				<foreach item="item" index="index" collection="sLedgerTypeCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialCompanyCd != null and sLedgerFinancialCompanyCd.size != 0">
				AND ledger_financial_company_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialCompanyCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialBranchCd != null and sLedgerFinancialBranchCd.size != 0">
				AND ledger_financial_branch_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialBranchCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialProductCd != null and sLedgerFinancialProductCd.size != 0">
				AND ledger_financial_product_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialProductCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="searchText != null and searchText != ''">
				AND (ledger_car_name like CONCAT('%',#{searchText},'%')
					OR ledger_car_number like CONCAT('%',#{searchText},'%')
					OR ledger_other like CONCAT('%',#{searchText},'%')
					OR ledger_customer_name like CONCAT('%',#{searchText},'%')
					)
			</if>
			) data
		ORDER BY data.approval_state, data.ledger_create_date desc
  	</select>
  	
  	<!-- 원장 목록 (AG용) - 금월 승인 요청 완료 목록 -->
	<select id="selectLedgerListForAgDone" resultType="ledgerVO" parameterType="ledgerVO">
		SELECT *
		FROM
			(SELECT DISTINCT l.*
				,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_company_cd) as ledgerFinancialCompanyCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_branch_cd) as ledgerFinancialBranchCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_financial_product_cd) as ledgerFinancialProductCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_dealer_brand_cd) as ledgerDealerBrandCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_dealer_company_cd) as ledgerDealerCompanyCdName
				,(SELECT code_name FROM code WHERE code_id = l.ledger_type_cd) as ledgerTypeCdName
				,(SELECT count(*) FROM approval WHERE approval_ledger_seq = ledger_seq) as cnt
				, a.approval_state
			FROM ledger l
			left JOIN approval a
			ON l.ledger_seq = a.approval_ledger_seq
			WHERE 1=1
			AND a.approval_user_id = #{approvalUserId}
			AND a.approval_state = '승인'
			AND ledger_create_year = extract(year from now())
			AND ledger_create_month = extract(month from now())
			<if test="sLedgerTypeCd != null and sLedgerTypeCd.size != 0">
				AND ledger_type_cd in
				<foreach item="item" index="index" collection="sLedgerTypeCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialCompanyCd != null and sLedgerFinancialCompanyCd.size != 0">
				AND ledger_financial_company_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialCompanyCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialBranchCd != null and sLedgerFinancialBranchCd.size != 0">
				AND ledger_financial_branch_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialBranchCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialProductCd != null and sLedgerFinancialProductCd.size != 0">
				AND ledger_financial_product_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialProductCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="searchText != null and searchText != ''">
				AND (ledger_car_name like CONCAT('%',#{searchText},'%')
					OR ledger_car_number like CONCAT('%',#{searchText},'%')
					OR ledger_other like CONCAT('%',#{searchText},'%')
					OR ledger_customer_name like CONCAT('%',#{searchText},'%')
					)
			</if>
			) data
		ORDER BY data.ledger_create_date desc
  	</select>
  	
  	<!-- 등록 년 조회 -->
	<select id="selectLedgerYear" resultType="map">
		select ledger_create_year
		from ledger
		group by ledger_create_year
  	</select>
  	
  	<!-- 금융사 원장 합계 표시 -->
	<select id="selectSumCost" resultType="map">
		SELECT
			SUM(data.ledger_car_price) as ledgerCarPrice
			, SUM(data.ledger_acquisition_cost) as ledgerAcquisitionCost
			, SUM(data.ledger_total_fee_sum) as ledgerTotalFeeSum
			, SUM(data.ledger_sliding_sum) as ledgerSlidingSum
			, SUM(data.ledger_add_promotion) as ledgerAddPromotion
		FROM (
			SELECT DISTINCT l.*
				,(SELECT count(*) FROM approval WHERE approval_ledger_seq = ledger_seq 
					<if test="stateType != null and stateType != ''">
						<choose>
							<when test="stateType.equals('request')">
								AND a.approval_state = '요청'
								AND a.approval_yn = 'N'
							</when>
							<when test="stateType.equals('complete')">
								AND a.approval_state = '승인'
							</when>
							<when test="stateType.equals('left')">
								AND a.approval_state is null
							</when>
						</choose>
					</if>
					) as cnt
			FROM ledger l
			left JOIN approval a
			ON l.ledger_seq = a.approval_ledger_seq
			WHERE 1=1
			<if test="sLedgerTypeCd != null and sLedgerTypeCd.size != 0">
				AND ledger_type_cd in
				<foreach item="item" index="index" collection="sLedgerTypeCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialCompanyCd != null and sLedgerFinancialCompanyCd.size != 0">
				AND ledger_financial_company_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialCompanyCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialBranchCd != null and sLedgerFinancialBranchCd.size != 0">
				AND ledger_financial_branch_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialBranchCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="sLedgerFinancialProductCd != null and sLedgerFinancialProductCd.size != 0">
				AND ledger_financial_product_cd in
				<foreach item="item" index="index" collection="sLedgerFinancialProductCd" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="stateType != null and stateType != ''">
				<choose>
					<when test="stateType.equals('request')">
						AND a.approval_state = '요청'
						AND a.approval_yn = 'N'
					</when>
					<when test="stateType.equals('complete')">
						AND a.approval_state = '승인'
					</when>
					<when test="stateType.equals('left')">
						AND a.approval_state is null
					</when>
				</choose>
			</if>
			<if test="searchText != null and searchText != ''">
				AND (ledger_car_name like CONCAT('%',#{searchText},'%')
					OR ledger_car_number like CONCAT('%',#{searchText},'%')
					OR ledger_other like CONCAT('%',#{searchText},'%')
					OR ledger_customer_name like CONCAT('%',#{searchText},'%')
					)
			</if>
			<if test="ledgerCreateYear != null">
				AND ledger_create_year = #{ledgerCreateYear}
			</if>
			<if test="ledgerCreateMonth != null">
				AND ledger_create_month = #{ledgerCreateMonth}
			</if>
		) as data
		WHERE 1=1
		<if test="multiRequestYn != null and multiRequestYn != ''">
			<choose>
				<when test='multiRequestYn == "Y"'>
					AND cnt = 1
				</when>
				<when test='multiRequestYn == "N"'>
					AND cnt > 1
				</when>
			</choose>
		</if>
  	</select>
  	
  	<!-- 승인 처리 완료 여부 -->
	<select id="selectCountOfApprovalThisMonth" resultType="map" parameterType="approvalVO">
		SELECT COUNT(approval_state) as cnt
			, approval_state
		FROM approval
		WHERE approval_user_id = #{approvalUserId}
		AND extract(year from approval_request_date) = extract(year from now())
		AND extract(month from approval_request_date) = extract(month from now())
		GROUP BY approval_state
		union
		SELECT COUNT(*) as cnt
			, '전체'
		FROM approval
		WHERE approval_user_id = #{approvalUserId}
		AND extract(year from approval_request_date) = extract(year from now())
		AND extract(month from approval_request_date) = extract(month from now())
  	</select>
  	
</mapper>